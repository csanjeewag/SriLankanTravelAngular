{"version":3,"sources":["webpack:///./src/app/AuthGuard/auth-gurad.guard.ts","webpack:///./src/app/view-pages/add-view/add-view.component.css","webpack:///./src/app/view-pages/add-view/add-view.component.html","webpack:///./src/app/view-pages/add-view/add-view.component.ts","webpack:///./src/app/view-pages/all-images/all-images.component.css","webpack:///./src/app/view-pages/all-images/all-images.component.html","webpack:///./src/app/view-pages/all-images/all-images.component.ts","webpack:///./src/app/view-pages/all-pages/all-pages.component.css","webpack:///./src/app/view-pages/all-pages/all-pages.component.html","webpack:///./src/app/view-pages/all-pages/all-pages.component.ts","webpack:///./src/app/view-pages/pages-state/pages-state.component.css","webpack:///./src/app/view-pages/pages-state/pages-state.component.html","webpack:///./src/app/view-pages/pages-state/pages-state.component.ts","webpack:///./src/app/view-pages/side-bar/side-bar.component.css","webpack:///./src/app/view-pages/side-bar/side-bar.component.html","webpack:///./src/app/view-pages/side-bar/side-bar.component.ts","webpack:///./src/app/view-pages/update-page/update-page.component.css","webpack:///./src/app/view-pages/update-page/update-page.component.html","webpack:///./src/app/view-pages/update-page/update-page.component.ts","webpack:///./src/app/view-pages/upload-page/upload-page.component.css","webpack:///./src/app/view-pages/upload-page/upload-page.component.html","webpack:///./src/app/view-pages/upload-page/upload-page.component.ts","webpack:///./src/app/view-pages/view-pages.module.ts","webpack:///./src/app/view-pages/views/views.component.css","webpack:///./src/app/view-pages/views/views.component.html","webpack:///./src/app/view-pages/views/views.component.ts"],"names":[],"mappings":"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","file":"view-pages-view-pages-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthServiceService } from \"./auth-service.service\";\nimport { RepositoryService } from \"./../ShareData/repository.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuradGuard implements CanActivate {\n  constructor(private auth : AuthServiceService, private repository:RepositoryService){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n  \n     \n\n      const expectedRole1 = next.data.expectedRole1;\n      const expectedRole2 = next.data.expectedRole2;\n      const expectedRole3 = next.data.expectedRole3;\n     \n      if((this.auth.tokencheckRole()===expectedRole1)||(this.auth.tokencheckRole()===expectedRole2)||(this.auth.tokencheckRole()===expectedRole3)){\n        return true;\n      }\n      else{\n        return false;\n      }\n      \n       }\n  }\n\n\n","module.exports = \"#msg{\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-10 container\\\">\\n            <div class=\\\"card\\\">\\n                    <h5 class=\\\"card-header\\\"><h2> Create a new View</h2></h5>\\n                    <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title\\\"> <h3 id=\\\"msg\\\">{{Message}}</h3></h5>\\n                      <form [formGroup]=\\\"pageForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"createpage(pageForm.value)\\\">\\n                            <div class=\\\"form-group col-md-10 container\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                            <label for=\\\"email\\\" class=\\\"sr-only\\\">DepartmentId</label>\\n                                            <input class=\\\"form-control\\\" formControlName=\\\"id\\\" id=\\\"id\\\" placeholder=\\\"Topic Id\\\">\\n                                            <em *ngIf=\\\"validateControl('id') && hasError('id', 'required')\\\">*Id is required!</em>\\n                                            \\n                                        </div> \\n                            </div>\\n\\n                            <div class=\\\"form-group col-md-10 container\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                            <label for=\\\"key\\\" class=\\\"sr-only\\\">Name</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"topic\\\" id=\\\"topic\\\" class=\\\"form-control\\\" placeholder=\\\"Topic Name\\\">\\n                                            <em *ngIf=\\\"validateControl('topic') && hasError('topic', 'required')\\\">*Topic Name is required</em>\\n                                           \\n                                        </div>\\n                            </div>\\n                            \\n                            <div class=\\\"form-group col-md-10 container\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                            <label for=\\\"key\\\" class=\\\"sr-only\\\">Name</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"subtopic\\\" id=\\\"subtopic\\\" class=\\\"form-control\\\" placeholder=\\\"Sub Topic Name\\\">\\n                                            <em *ngIf=\\\"validateControl('subtopic') && hasError('subtopic', 'required')\\\">*Sub Topic is required</em>\\n                                           \\n                                        </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-md-10 container\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                            <label for=\\\"key\\\" class=\\\"sr-only\\\">Type</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"type\\\" id=\\\"type\\\" class=\\\"form-control\\\" placeholder=\\\"Type\\\">\\n                                            <em *ngIf=\\\"validateControl('type') && hasError('type', 'required')\\\">*type is required</em>\\n                                           \\n                                        </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group col-md-10 container\\\">\\n                                    <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-8\\\">\\n                                                      \\n                                                    <label for=\\\"comment\\\"><b>Discription 1:</b></label>\\n                                                    <!-- <input rows=\\\"4\\\" cols=\\\"50\\\" type=\\\"text\\\" formControlName=\\\"dis1\\\" id=\\\"dis1\\\" class=\\\"form-control\\\" placeholder=\\\"Discription 1 \\\"> -->\\n                                                    <textarea  class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"comment\\\"formControlName=\\\"dis1\\\" placeholder=\\\"Discription 1 \\\" > </textarea>\\n                                                    <em *ngIf=\\\"validateControl('dis1') && hasError('dis1', 'required')\\\">*Discription is required</em>\\n                                                   \\n                                                          \\n                                                  </div>\\n                                                  <div class=\\\"form-group col-md-4\\\">\\n                                                        <input formControlName=\\\"image\\\" type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files,0)\\\"/>\\n                                                           <img *ngIf=\\\"ImageUrl[0]\\\" [src]=\\\"ImageUrl[0]\\\" style=\\\"width:250px; height:200px\\\"> \\n                                                           <em *ngIf=\\\"validateControl('image') && hasError('image', 'required')\\\">*Insert image</em>\\n                                                   \\n                                                  </div>\\n                                     </div>  \\n                            </div>\\n\\n                            \\n                               \\n                           \\n                            <div class=\\\"form-group col-md-10 container\\\">\\n                                    <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-8\\\">\\n                                                      \\n                                                    <label for=\\\"comment\\\"><b>Discription 2:</b></label>\\n                                                    <!-- <input rows=\\\"4\\\" cols=\\\"50\\\" type=\\\"text\\\" formControlName=\\\"dis1\\\" id=\\\"dis1\\\" class=\\\"form-control\\\" placeholder=\\\"Discription 1 \\\"> -->\\n                                                    <textarea  class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"comment\\\"formControlName=\\\"dis2\\\" placeholder=\\\"Discription 2 \\\" > </textarea>\\n                                                    <em *ngIf=\\\"validateControl('dis2') && hasError('dis2', 'required')\\\">*password is required</em>\\n                                                    <em *ngIf=\\\"validateControl('dis2') && hasError('dis2', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n                                                     \\n                                                          \\n                                                  </div>\\n                                                  <div class=\\\"form-group col-md-4\\\">\\n                                                        <input type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files,1)\\\"/>\\n                                                           <img *ngIf=\\\"ImageUrl[1]\\\" [src]=\\\"ImageUrl[1]\\\" style=\\\"width:250px; height:200px\\\"> \\n                                                  </div>\\n                                     </div>  \\n                            </div>\\n\\n                            <div class=\\\"form-group col-md-10 container\\\">\\n                                    <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-8\\\">\\n                                                      \\n                                                    <label for=\\\"comment\\\"><b>Discription 3:</b></label>\\n                                                    <!-- <input rows=\\\"4\\\" cols=\\\"50\\\" type=\\\"text\\\" formControlName=\\\"dis1\\\" id=\\\"dis1\\\" class=\\\"form-control\\\" placeholder=\\\"Discription 1 \\\"> -->\\n                                                    <textarea  class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"comment\\\"formControlName=\\\"dis3\\\" placeholder=\\\"Discription 3 \\\" > </textarea>\\n                                                    <em *ngIf=\\\"validateControl('dis3') && hasError('dis3', 'required')\\\">*password is required</em>\\n                                                    <em *ngIf=\\\"validateControl('dis3') && hasError('dis3', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n                                                     \\n                                                          \\n                                                  </div>\\n                                                  <div class=\\\"form-group col-md-4\\\" >\\n                                                        <input type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files,2)\\\" />\\n                                                           <img *ngIf=\\\"ImageUrl[2]\\\" [src]=\\\"ImageUrl[2]\\\" style=\\\"width:250px; height:200px\\\"> \\n                                                  </div>\\n                                     </div>  \\n                            </div>\\n\\n                            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"redirect()\\\">Cancel</button>\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!pageForm.valid\\\">Create New page</button>\\n                                    \\n                                </div> \\n                        </form>\\n      \\n                    </div>\\n                  </div>\\n    </div>\\n</div>\\n<!-- <div class=\\\"card\\\">\\n    <h5 class=\\\"card-header\\\"><h2> Create a new View</h2></h5>\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\"> <h3 id=\\\"msg\\\">{{Message}}</h3></h5>\\n      <form [formGroup]=\\\"pageForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"createpage(pageForm.value)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\" class=\\\"sr-only\\\">DepartmentId</label>\\n                <input class=\\\"form-control\\\" formControlName=\\\"id\\\" id=\\\"id\\\" placeholder=\\\"Topic Id\\\">\\n                <em *ngIf=\\\"validateControl('id') && hasError('id', 'required')\\\">*Email is required!</em>\\n                <em *ngIf=\\\"validateControl('id') && hasError('id', 'email')\\\">*This not a valid email!</em>\\n        \\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"key\\\" class=\\\"sr-only\\\">Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"topic\\\" id=\\\"topic\\\" class=\\\"form-control\\\" placeholder=\\\"Topic Name\\\">\\n                <em *ngIf=\\\"validateControl('topic') && hasError('topic', 'required')\\\">*password is required</em>\\n                <em *ngIf=\\\"validateControl('topic') && hasError('topic', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n              \\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"key\\\" class=\\\"sr-only\\\">Dis1</label>\\n                <input type=\\\"text\\\" formControlName=\\\"type\\\" id=\\\"type\\\" class=\\\"form-control\\\" placeholder=\\\"Type\\\">\\n                <em *ngIf=\\\"validateControl('type') && hasError('type', 'required')\\\">*password is required</em>\\n                <em *ngIf=\\\"validateControl('type') && hasError('type', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n              \\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"key\\\" class=\\\"sr-only\\\">Dis1</label>\\n                <input type=\\\"text\\\" formControlName=\\\"dis\\\" id=\\\"dis\\\" class=\\\"form-control\\\" placeholder=\\\"Dis 1 \\\">\\n                <em *ngIf=\\\"validateControl('dis') && hasError('dis', 'required')\\\">*password is required</em>\\n                <em *ngIf=\\\"validateControl('dis') && hasError('dis', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n              \\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"key\\\" class=\\\"sr-only\\\">Dis1</label>\\n                <input type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files)\\\"/>\\n                \\n            </div>\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"redirectToOwnerList()\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!pageForm.valid\\\">Create</button>\\n            \\n        </div> \\n        \\n        \\n        </form>\\n      \\n    </div>\\n  </div>\\n  \\n  <img [src]=\\\"ImageUrl\\\" style=\\\"width:250px;height:200px\\\">\\n -->\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormControl, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors,AsyncValidatorFn } from '@angular/forms';\nimport { RepositoryService } from \"./../../ShareData/repository.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from \"./../../AuthGuard/auth-service.service\";\n\n@Component({\n  selector: 'app-add-view',\n  templateUrl: './add-view.component.html',\n  styleUrls: ['./add-view.component.css']\n})\nexport class AddViewComponent implements OnInit {\n\n  constructor(private auth:AuthServiceService, private router: Router,private route : ActivatedRoute,private repository:RepositoryService,private fb: FormBuilder) { }\n\n  public pageForm:FormGroup;\n  public pageForms:FormGroup;\n  public formGroup;\n  public Message:any;\n  public ImageUrl: Array<string> = [];\n   public FileImage: Array<File> = [];\n   public Author:any;\n  ngOnInit() {\n\n    this.Author = this.auth.tokencheckId();\n    \n    this.pageForm = this.fb.group({\n      id:[null,Validators.required],\n      topic:[null,Validators.required],\n      subtopic:[null],\n      type:[null,Validators.required],\n      dis1:[null],\n      dis2:[null],\n      dis3:[null],\n      image :[null,Validators.required]\n     \n    });\n    \n\n    this.formGroup = this.fb.group({\n      file: [null, Validators.required]\n    });\n  }\n\n  public validateControl(controlName: string) {\n    if (this.pageForm.controls[controlName].invalid && this.pageForm.controls[controlName].touched)\n      return true;\n\n    return false;\n  }\n\n  public hasError(controlName: string, errorName: string) {\n    if (this.pageForm.controls[controlName].hasError(errorName))\n      return true;\n\n    return false;\n  }\n\n  \n\n  public createpage(pageFormvalue){\n    \n    \n    if (this.pageForm.valid) {\n     \n      let formData = new FormData();\n      formData.append('Id',pageFormvalue.id,);\n      formData.append('Topic',pageFormvalue.topic);\n      formData.append('SubTopic',pageFormvalue.subtopic);\n      formData.append('Author', this.Author);\n      formData.append('Type',pageFormvalue.type);\n      formData.append('Dis1',pageFormvalue.dis1);\n      formData.append('Dis2',pageFormvalue.dis2);\n      formData.append('Dis3',pageFormvalue.dis3);\n      formData.append('DefImage', this.FileImage[0]);\n      formData.append('Image', this.FileImage[1]);\n      formData.append('Image', this.FileImage[2]);\n      console.log(formData.get('Id'))\n     \n\n      \n      let apiUrl = 'test';\n    \n      this.repository.postFile(apiUrl, formData)\n      \n        .subscribe(res =>  {\n          this.router.navigate(['view/side/travel']);\n                    },\n          (error => {\n            this.Message = \"Adding Page Failed!\";\n          })\n        )\n    \n    }\n  }\n\n  onFileChange(file : FileList,id:number) {\n    \n\n    this.FileImage[id] = file.item(0);\n   //selected image viewing\n    var reader = new FileReader();\n    reader.onload = (event:any) => {\n       this.ImageUrl[id] = event.target.result;\n\n       console.log(event.target.result)\n    }\n     reader.readAsDataURL(this.FileImage[id]);\n  }\n\n  public redirect(){\n    this.router.navigate(['view/side/travel']);\n  }\n}\n\n\n","module.exports = \"#headerImage{\\r\\n    height: 150px;\\r\\n    z-index: -1;\\r\\n}\\r\\n#pageImage{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"\\n\\n\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"form-group col-md-10 container\\\">\\n          <div class=\\\"card\\\">\\n                  <h5 class=\\\"card-header\\\"><h2>Sri Lankan Travelling</h2>   <img class=\\\"card-img-top\\\" src=\\\"assets/back.jpeg\\\" alt=\\\"Cinque Terre\\\" id=\\\"headerImage\\\"> </h5>\\n                  <div class=\\\"card-body\\\">\\n                      <h5 class=\\\"card-title\\\"></h5>\\n                      <div class=\\\"form-row\\\">\\n      \\n\\n                          <div class=\\\"form-group col-md-3\\\" *ngFor=\\\"let p of Images; index as i;\\\">\\n                             <div class=\\\"card\\\">\\n                              <h5 class=\\\"card-header\\\"> <img  class=\\\"card-img-top\\\" [src]=\\\"imageUrl+p.imageId\\\" alt=\\\"Cinque Terre\\\" id=\\\"pageImage\\\">\\n                                \\n                              </h5>\\n                              <div class=\\\"card-body\\\">\\n                                  <h5 class=\\\"card-title\\\"> </h5>\\n                                  <div *ngIf=\\\"(p.isActive)\\\"><button type=\\\"button\\\" id=\\\"update\\\" class=\\\"btn  btn-danger\\\" (click)=DeActivePage(p.imageId)>Deactive</button></div>\\n                                  <div *ngIf=\\\"!(p.isActive)\\\"><button type=\\\"button\\\" id=\\\"update\\\" class=\\\"btn  btn-success\\\" (click)=ActivePage(p.imageId)>Active</button></div>\\n                                \\n                              </div>\\n                            </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n          </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RepositoryService } from \"./../../ShareData/repository.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Router,ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-all-images',\n  templateUrl: './all-images.component.html',\n  styleUrls: ['./all-images.component.css']\n})\nexport class AllImagesComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute,private router: Router,private repository:RepositoryService) { }\n  public pages;\n  public  imageUrl : string = this.repository.imageUrl;\npublic Images:any;\n  ngOnInit() {\n    this.route.paramMap.subscribe((params:ParamMap)=>{\n      let id = params.get('id');\n      this.getimages(id);\n    })\n  }\n\n  public  getimages(id){\n    this.repository.getData('allgetimage/'+id)\n    .subscribe(res => {\n      this.Images = res ;\n     \n  },\n    (error) => {\n    \n    })\n  }\n\n  public DeActivePage(id){\n    let apiUrl = 'deactiveimage';\n    \n    let formData = new FormData();\n      formData.append('Id',id);\n\n    this.repository.postFile(apiUrl, formData)\n    \n      .subscribe(res =>  {\n        location.reload();\n                  },\n        (error => {\n          // this.Message=\"role Created Failed,Try Again!\";\n        })\n      )\n  \n  }\n  public ActivePage(id){\n    let apiUrl = 'activeimage';\n    \n    let formData = new FormData();\n      formData.append('Id',id);\n\n    this.repository.postFile(apiUrl, formData)\n    \n      .subscribe(res =>  {\n        location.reload();\n                  },\n        (error => {\n          // this.Message=\"role Created Failed,Try Again!\";\n        })\n      )\n  \n  }\n}\n","module.exports = \"#headerImage{\\r\\n    height: 150px;\\r\\n    z-index: -1;\\r\\n}\\r\\n#pageImage{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"\\n\\n\\n<div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-10\\\">\\n            <div class=\\\"card\\\">\\n                    <h5 class=\\\"card-header\\\"><h2>Sri Lankan Travelling</h2>   <img class=\\\"card-img-top\\\" src=\\\"assets/back.jpeg\\\" alt=\\\"Cinque Terre\\\" id=\\\"headerImage\\\"> </h5>\\n                    <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title\\\"></h5>\\n                        <div class=\\\"form-row\\\">\\n        \\n\\n                            <div class=\\\"form-group col-md-3\\\" *ngFor=\\\"let p of pages; index as i;\\\">\\n                               <div class=\\\"card\\\">\\n                                <h5 class=\\\"card-header\\\"><h3>{{p.topic}}</h3>   <img  class=\\\"card-img-top\\\" [src]=\\\"imageUrl+p.imageId\\\" alt=\\\"Cinque Terre\\\" id=\\\"pageImage\\\" (click)=gotopage(p.id)>{{p.subTopic}}\\n\\n                                </h5>\\n                                <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title\\\"> </h5>\\n                                 \\n                                </div>\\n                              </div>\\n                              </div>\\n                          </div>\\n  \\n                      </div>\\n  \\n            </div>\\n    </div>\\n  </div>\\n  \\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormControl, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors,AsyncValidatorFn } from '@angular/forms';\nimport { RepositoryService } from \"./../../ShareData/repository.service\";\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-all-pages',\n  templateUrl: './all-pages.component.html',\n  styleUrls: ['./all-pages.component.css']\n})\nexport class AllPagesComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute,private router: Router,private repository:RepositoryService,private fb: FormBuilder) { }\npublic pages;\npublic  imageUrl : string = this.repository.imageUrl;\n  ngOnInit() {\n    this.getpages();\n  }\n\n  public  getpages(){\n    this.repository.getData('gettopicid')\n    .subscribe(res => {\n      this.pages = res ;\n     \n  },\n    (error) => {\n    \n    })\n  }\n\n  public gotopage(id){\n\n    this.router.navigate(['view/side/travel/'+id]);\n  }\n  \n\n  \n}\n","module.exports = \"#pageImage{\\r\\n    height: 50px;\\r\\n    width: 100px;;\\r\\n}\\r\\n#headerImage{\\r\\n    height: 150px;\\r\\n    z-index: -1;\\r\\n}\\r\\n\"","module.exports = \"\\n\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"form-group col-md-10 container\\\">\\n          <div class=\\\"card\\\">\\n                  <h5 class=\\\"card-header\\\"><h2>Sri Lankan Travelling</h2>   <img class=\\\"card-img-top\\\" src=\\\"assets/back.jpeg\\\" alt=\\\"Cinque Terre\\\" id=\\\"headerImage\\\"></h5>\\n                 \\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr >\\n      <th>ID</th>\\n    <th>Topic</th>\\n    <th>Sub Topic</th>\\n    <th>State</th>\\n    <th>View Page</th>\\n    <th> Update</th>\\n    <th>Active/Deactive</th>\\n    <th >All Images </th>\\n   \\n  </tr></thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let p of pages\\\" >\\n    <td>{{p.id}}</td>\\n    <td>{{p.topic}}</td>\\n    <td>{{p.subTopic}}</td>\\n    <td>{{p.isActive}}</td>\\n    <td (click)=gotopage(p.id)><img  class=\\\"card-img-top\\\" [src]=\\\"imageUrl+p.imageId\\\" alt=\\\"Cinque Terre\\\" id=\\\"pageImage\\\" (click)=gotopage(p.id)></td>\\n    \\n\\n    <td><button type=\\\"button\\\" id=\\\"details\\\" class=\\\"btn  btn-default\\\" (click)=updatepage(p.id)>Update</button></td>\\n    \\n          <td *ngIf=\\\"(p.isActive)\\\"><button type=\\\"button\\\" id=\\\"update\\\" class=\\\"btn  btn-danger\\\" (click)=DeActivePage(p.id)>Deactive</button></td>\\n          <td *ngIf=\\\"!(p.isActive)\\\"><button type=\\\"button\\\" id=\\\"update\\\" class=\\\"btn  btn-success\\\" (click)=ActivePage(p.id)>Active</button></td>\\n          <td ><button type=\\\"button\\\" id=\\\"update\\\" class=\\\"btn  btn-success\\\" (click)=AllImage(p.id)>All Images</button></td>\\n          \\n   \\n  </tr>\\n  </tbody>\\n</table>\\n</div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RepositoryService } from \"./../../ShareData/repository.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Router,ParamMap } from '@angular/router';\nimport { ResourceLoader } from '@angular/compiler';\n\n@Component({\n  selector: 'app-pages-state',\n  templateUrl: './pages-state.component.html',\n  styleUrls: ['./pages-state.component.css']\n})\nexport class PagesStateComponent implements OnInit {\n\n  constructor(private repository:RepositoryService, private route: ActivatedRoute,private router: Router) { }\n public pages:any;\n public imageUrl : string = \"http://localhost:5308/\";\n  ngOnInit() {\n    this.getpage();\n  }\n  \n  public  getpage(){\n    this.repository.getData('getallpages')\n    .subscribe(res => {\n      this.pages = res ;\n    \n  },\n    (error) => {\n    \n    })\n  }\n\n  public gotopage(id){\n\n    this.router.navigate(['view/side/travel/'+id]);\n  }\n  \n  public updatepage(id){\n\n    this.router.navigate(['view/updateview/'+id]);\n  }\n  public AllImage(id){\n\n    this.router.navigate(['view/allimage/'+id]);\n  }\n  public DeActivePage(id){\n\n    this.repository.getData('deactivepage/'+id)\n    .subscribe(res => {\n      //this.router.navigate(['view/side/travel/']);\n      location.reload();\n  },\n    (error) => {\n    \n    })\n  }\n  public ActivePage(id){\n\n    this.repository.getData('activepage/'+id)\n    .subscribe(res => {\n     // this.router.navigate(['view/side/travel/'+id]);\n     location.reload();\n  },\n    (error) => {\n    \n    })\n  }\n}\n","module.exports = \".sidenav {\\r\\n    height: 100%;\\r\\n    \\r\\n    left: 0;\\r\\n    background-color: rgb(68, 70, 77);\\r\\n    overflow-x: show;\\r\\n    \\r\\n}\\r\\n\\r\\n.sidenav a {\\r\\n    padding: 6px 8px 6px 16px;\\r\\n    text-decoration: none;\\r\\n    font-size: 25px;\\r\\n    text-align: left;\\r\\n    color: #0f0f0f;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.sidenav a:hover {\\r\\n    color: #f1f1f1;\\r\\n}\\r\\n\"","module.exports = \"\\n\\n\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"form-group col-md-2\\\">\\n        <div class=\\\"sidenav\\\" >\\n                <br><br>\\n            <div *ngFor=\\\"let p of pages\\\">\\n                    <a (click)=gotopage(p.id)>{{p.topic}}</a>\\n            </div>\\n                \\n               \\n              </div>\\n              \\n  </div>\\n  \\n  <div class=\\\"form-group col-md-10\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormControl, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors,AsyncValidatorFn } from '@angular/forms';\nimport { RepositoryService } from \"./../../ShareData/repository.service\";\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.css']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute,private router: Router,private repository:RepositoryService,private fb: FormBuilder) { }\npublic pages:any;\npublic Id:any;\n\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.Id = params.get(\"id\")\n    })\n    this.getpages();\n    \n  }\n\n\n  public  getpages(){\n    this.repository.getData('getpagestopic')\n    .subscribe(res => {\n      this.pages = res ;\n  \n  },\n    (error) => {\n    \n    })\n  }\n\n  public gotopage(id){\n\n    this.router.navigate(['view/side/travel/'+id]);\n  }\n  \n}\n","module.exports = \"#msg{\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-10 container\\\">\\n                <div class=\\\"card\\\">\\n                        <h5 class=\\\"card-header\\\"><h2> Update  View</h2></h5>\\n                        <div class=\\\"card-body\\\">\\n                            <h5 class=\\\"card-title\\\"> <h3 id=\\\"msg\\\">{{Message}}</h3></h5>\\n                          <form [formGroup]=\\\"pageForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"createpage(pageForm.value)\\\">\\n                                <div class=\\\"form-group col-md-10 container\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                                <label for=\\\"email\\\" class=\\\"sr-only\\\">DepartmentId</label>\\n                                                <input class=\\\"form-control\\\" formControlName=\\\"id\\\" id=\\\"id\\\" placeholder=\\\"Topic Id\\\">\\n                                                <em *ngIf=\\\"validateControl('id') && hasError('id', 'required')\\\">*Topic is required!</em>\\n                                                \\n                                            </div> \\n                                </div>\\n    \\n                                <div class=\\\"form-group col-md-10 container\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                                <label for=\\\"key\\\" class=\\\"sr-only\\\">Name</label>\\n                                                <input type=\\\"text\\\" formControlName=\\\"topic\\\" id=\\\"topic\\\" class=\\\"form-control\\\" placeholder=\\\"Topic Name\\\">\\n                                                <em *ngIf=\\\"validateControl('topic') && hasError('topic', 'required')\\\">*Topic Name is required</em>\\n                                               \\n                                            </div>\\n                                </div>\\n                                \\n                                <div class=\\\"form-group col-md-10 container\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                                <label for=\\\"key\\\" class=\\\"sr-only\\\">Name</label>\\n                                                <input type=\\\"text\\\" formControlName=\\\"subtopic\\\" id=\\\"subtopic\\\" class=\\\"form-control\\\" placeholder=\\\"Sub Topic Name\\\">\\n                                                <em *ngIf=\\\"validateControl('subtopic') && hasError('subtopic', 'required')\\\">*Sub Topic is required</em>\\n                                               \\n                                            </div>\\n                                </div>\\n    \\n                                <div class=\\\"form-group col-md-10 container\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                                <label for=\\\"key\\\" class=\\\"sr-only\\\">Type</label>\\n                                                <input type=\\\"text\\\" formControlName=\\\"type\\\" id=\\\"type\\\" class=\\\"form-control\\\" placeholder=\\\"Type\\\">\\n                                                <em *ngIf=\\\"validateControl('type') && hasError('type', 'required')\\\">*Type is required</em>\\n                                                \\n                                            </div>\\n                                </div>\\n    \\n                                <div class=\\\"form-group col-md-10 container\\\">\\n                                        <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col-md-8\\\">\\n                                                          \\n                                                        <label for=\\\"comment\\\"><b>Discription 1:</b></label>\\n                                                        <!-- <input rows=\\\"4\\\" cols=\\\"50\\\" type=\\\"text\\\" formControlName=\\\"dis1\\\" id=\\\"dis1\\\" class=\\\"form-control\\\" placeholder=\\\"Discription 1 \\\"> -->\\n                                                        <textarea  class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"comment\\\" formControlName=\\\"dis1\\\" placeholder=\\\"Discription 1 \\\" > </textarea>\\n                                                        <em *ngIf=\\\"validateControl('dis1') && hasError('dis1', 'required')\\\">*password is required</em>\\n                                                        <em *ngIf=\\\"validateControl('dis1') && hasError('dis1', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n                                                         \\n                                                              \\n                                                      </div>\\n                                                      <div class=\\\"form-group col-md-4\\\">\\n                                                                <label for=\\\"I1\\\"><b>Change Main Image:</b></label>\\n                                                            <input formControlName=\\\"image\\\" id=\\\"I1\\\" type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files,0)\\\"/>\\n                                                               <img *ngIf=\\\"ImageUrl[0]\\\" [src]=\\\"ImageUrl[0]\\\" style=\\\"width:250px; height:200px\\\"> \\n                                                      </div>\\n                                         </div>  \\n                                </div>\\n    \\n                                \\n                                   \\n                               \\n                                <div class=\\\"form-group col-md-10 container\\\">\\n                                        <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col-md-8\\\">\\n                                                          \\n                                                        <label for=\\\"comment\\\"><b>Discription 2:</b></label>\\n                                                        <!-- <input rows=\\\"4\\\" cols=\\\"50\\\" type=\\\"text\\\" formControlName=\\\"dis1\\\" id=\\\"dis1\\\" class=\\\"form-control\\\" placeholder=\\\"Discription 1 \\\"> -->\\n                                                        <textarea  class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"comment\\\"formControlName=\\\"dis2\\\" placeholder=\\\"Discription 2 \\\" > </textarea>\\n                                                        <em *ngIf=\\\"validateControl('dis2') && hasError('dis2', 'required')\\\">*password is required</em>\\n                                                        <em *ngIf=\\\"validateControl('dis2') && hasError('dis2', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n                                                         \\n                                                              \\n                                                      </div>\\n                                                      <div class=\\\"form-group col-md-4\\\">\\n                                                        <label for=\\\"I2\\\"><b>Add new Image:</b></label>\\n                                                            <input id=\\\"I2\\\" type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files,1)\\\"/>\\n                                                               <img *ngIf=\\\"ImageUrl[1]\\\" [src]=\\\"ImageUrl[1]\\\" style=\\\"width:250px; height:200px\\\"> \\n                                                      </div>\\n                                         </div>  \\n                                </div>\\n    \\n                                <div class=\\\"form-group col-md-10 container\\\">\\n                                        <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col-md-8\\\">\\n                                                          \\n                                                        <label for=\\\"comment\\\"><b>Discription 3:</b></label>\\n                                                        <!-- <input rows=\\\"4\\\" cols=\\\"50\\\" type=\\\"text\\\" formControlName=\\\"dis1\\\" id=\\\"dis1\\\" class=\\\"form-control\\\" placeholder=\\\"Discription 1 \\\"> -->\\n                                                        <textarea  class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"comment\\\"formControlName=\\\"dis3\\\" placeholder=\\\"Discription 3 \\\" > </textarea>\\n                                                        <em *ngIf=\\\"validateControl('dis3') && hasError('dis3', 'required')\\\">*password is required</em>\\n                                                        <em *ngIf=\\\"validateControl('dis3') && hasError('dis3', 'maxlength')\\\">*Maximum allowed length is 100 characters.</em>\\n                                                         \\n                                                              \\n                                                      </div>\\n                                                      <div class=\\\"form-group col-md-4\\\" >\\n                                                                <label for=\\\"I3\\\"><b>Add new Image:</b></label>\\n                                                            <input id=\\\"I3\\\" type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files,2)\\\" />\\n                                                               <img *ngIf=\\\"ImageUrl[2]\\\" [src]=\\\"ImageUrl[2]\\\" style=\\\"width:250px; height:200px\\\"> \\n                                                      </div>\\n                                         </div>  \\n                                </div>\\n    \\n                                <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"redirect()\\\">Cancel</button>\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!pageForm.valid\\\">Update</button>\\n                                        \\n                                    </div> \\n                            </form>\\n          \\n                        </div>\\n                      </div>\\n        </div>\\n    </div>\\n \"","  import { Component, OnInit } from '@angular/core';\n  import { FormBuilder,FormControl, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors,AsyncValidatorFn } from '@angular/forms';\n  import { RepositoryService } from \"./../../ShareData/repository.service\";\n  import { ActivatedRoute } from '@angular/router';\nimport { Router,ParamMap } from '@angular/router';\n\n  @Component({\n    selector: 'app-update-page',\n    templateUrl: './update-page.component.html',\n    styleUrls: ['./update-page.component.css']\n  })\n  export class UpdatePageComponent implements OnInit {\n\n    constructor(private repository:RepositoryService,private fb: FormBuilder, private route: ActivatedRoute,private router: Router) { }\n   \n  \n    public pageForm:FormGroup;\n    public pageForms:FormGroup;\n    public formGroup;\n    public Message:any\n    public ImageUrl: Array<string> = [];\n     public FileImage: Array<File> = [];\n     public Images:any;\n     public Page :any;\n     public Id = 1;\n    ngOnInit() {\n      this.route.paramMap.subscribe((params:ParamMap)=>{\n        let id = params.get('id');\n        this.getimages(id);\n        this.getpage(id);\n      })\n\n      this.pageForm = this.fb.group({\n        id:[null,Validators.required],\n        topic:[null,Validators.required],\n        subtopic:[null],\n        type:[null,Validators.required],\n        dis1:[null,Validators.required],\n        dis2:[null],\n        dis3:[null],\n        image :[null]\n       \n      });\n     \n    }\n  \n    public validateControl(controlName: string) {\n      if (this.pageForm.controls[controlName].invalid && this.pageForm.controls[controlName].touched)\n        return true;\n  \n      return false;\n    }\n  \n    public hasError(controlName: string, errorName: string) {\n      if (this.pageForm.controls[controlName].hasError(errorName))\n        return true;\n  \n      return false;\n    }\n  \n    \n  \n    public createpage(pageFormvalue){\n      \n      \n      if (this.pageForm.valid) {\n       \n        let formData = new FormData();\n        formData.append('Id',pageFormvalue.id,);\n        formData.append('Topic',pageFormvalue.topic);\n        formData.append('SubTopic',pageFormvalue.subtopic);\n        formData.append('Type',pageFormvalue.type);\n        formData.append('Dis1',pageFormvalue.dis1);\n        formData.append('Dis2',pageFormvalue.dis2);\n        formData.append('Dis3',pageFormvalue.dis3);\n        if(this.FileImage[0]== null){\n          formData.append('DefImage', this.Page.defImage);\n        }\n        else{\n          formData.append('DefImage', this.FileImage[0]);\n         \n        }\n       \n        formData.append('Image', this.FileImage[1]);\n        formData.append('Image', this.FileImage[2]);\n        \n       \n  \n        \n        let apiUrl = 'uploadpage';\n      \n        this.repository.postFile(apiUrl, formData)\n        \n          .subscribe(res =>  {\n            this.router.navigate(['view/side/travel']);\n                      },\n            (error => {\n              this.Message = \"Upload Page Failed!\";\n            })\n          )\n      \n      }\n    }\n  \n    onFileChange(file : FileList,id:number) {\n      \n  \n      this.FileImage[id] = file.item(0);\n     //selected image viewing\n      var reader = new FileReader();\n      reader.onload = (event:any) => {\n         this.ImageUrl[id] = event.target.result;\n  \n         \n      }\n       reader.readAsDataURL(this.FileImage[id]);\n    }\n\n\n    public  getpage(id){\n      this.repository.getData('getpage/'+id)\n      .subscribe(res => {\n        this.Page = res ;\n        \n        this.updatepages();\n    },\n      (error) => {\n      \n      })\n    }\n  \n    public  getimages(id){\n      this.repository.getData('getimage/'+id)\n      .subscribe(res => {\n        this.Images = res ;\n        \n    },\n      (error) => {\n      \n      })\n    }\n\n    public updatepages(){\n      this.pageForm.controls['id'].setValue(this.Page.id);\n      this.pageForm.controls['topic'].setValue(this.Page.topic);\n      this.pageForm.controls['subtopic'].setValue(this.Page.subtopic);\n      this.pageForm.controls['type'].setValue(this.Page.type);\n      this.pageForm.controls['dis1'].setValue(this.Page.dis1);\n      this.pageForm.controls['dis2'].setValue(this.Page.dis2);\n      this.pageForm.controls['dis3'].setValue(this.Page.dis3);\n      \n      this.pageForm.controls['image'].setValue(this.Page.defImage);\n    }\n    public redirect(){\n      this.router.navigate(['view/side/travel']);\n    }\n  }\n  ","module.exports = \"\"","module.exports = \"<p>\\n  upload-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload-page',\n  templateUrl: './upload-page.component.html',\n  styleUrls: ['./upload-page.component.css']\n})\nexport class UploadPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SideBarComponent } from './side-bar/side-bar.component';\nimport { ViewsComponent } from './views/views.component';\nimport { AddViewComponent } from './add-view/add-view.component';\nimport { UploadPageComponent } from './upload-page/upload-page.component';\nimport { UpdatePageComponent } from './update-page/update-page.component';\nimport { AllPagesComponent } from './all-pages/all-pages.component';\nimport { PagesStateComponent } from './pages-state/pages-state.component';\nimport { AllImagesComponent } from './all-images/all-images.component';\nimport { AuthGuradGuard } from \"./../AuthGuard/auth-gurad.guard\";\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule.forChild([\n      { path: 'addview', component: AddViewComponent,canActivate:[AuthGuradGuard],data: { expectedRole1: 'user',expectedRole2: 'admin'}},\n      { path: 'admin', component: PagesStateComponent,canActivate:[AuthGuradGuard],data: { expectedRole1: 'admin'}},\n      { path: 'updateview/:id', component: UpdatePageComponent,canActivate:[AuthGuradGuard],data: { expectedRole2: 'admin'}},\n      { path: 'allimage/:id', component: AllImagesComponent,canActivate:[AuthGuradGuard],data: { expectedRole2: 'admin'}},\n      { path: 'side', component: SideBarComponent,children:[\n        { path: 'travel', component: AllPagesComponent },\n        { path: 'travel/:id', component: ViewsComponent },\n        \n      ]}\n    ])\n  ],\n  declarations: [SideBarComponent, ViewsComponent, AddViewComponent, UploadPageComponent, UpdatePageComponent, AllPagesComponent, PagesStateComponent, AllImagesComponent]\n})\nexport class ViewPagesModule { }\n","module.exports = \"#headerImage{\\r\\n    height: 150px;\\r\\n    z-index: -1;\\r\\n}\\r\\n#pageImage{\\r\\n    width: 100%;\\r\\n}\\r\\n#im{\\r\\n    float: left;\\r\\n   \\r\\n}\\r\\n#dis{\\r\\n    text-align: left;\\r\\n}\\r\\n#author{\\r\\n    text-align: right;\\r\\n}\"","module.exports = \"\\n\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"form-group col-md-10\\\">\\n          <div class=\\\"card\\\">\\n                  <h5 class=\\\"card-header\\\"><h2>Sri Lankan Travelling</h2>   <img class=\\\"card-img-top\\\" src=\\\"assets/back.jpeg\\\" alt=\\\"Cinque Terre\\\" id=\\\"headerImage\\\"><h3>{{page.topic}} </h3><p id=\\\"author\\\">Posted By:{{page.userEmail}}</p></h5>\\n                  <div class=\\\"card-body\\\">\\n                      <h5 class=\\\"card-title\\\"></h5>\\n                      <div class=\\\"form-row\\\">\\n                          <div class=\\\"form-group col-md-6\\\">\\n                              <img class=\\\"card-img-top\\\" [src]=\\\"imageUrl+page.defImage\\\" alt=\\\"Cinque Terre\\\" id=\\\"pageImage\\\">\\n                              \\n                            </div>\\n                            <div *ngIf=\\\"!(page.dis1=='null')\\\"  class=\\\"form-group col-md-6\\\" id=\\\"dis\\\">\\n                              {{page.dis1}}\\n                              </div>\\n                      </div>\\n                      <div class=\\\"form-row\\\">\\n                          <div *ngIf=\\\"!(page.dis2=='null')\\\" class=\\\"form-group col-md-6\\\" id=\\\"dis\\\">\\n                              {{page.dis2}}\\n                            </div>\\n                            <div *ngIf=\\\"!(page.dis3=='null')\\\" class=\\\"form-group col-md-6\\\" id=\\\"dis\\\">\\n                              {{page.dis3}}\\n                              </div>\\n                      \\n                          <div class=\\\"form-group col-md-4\\\" *ngFor=\\\"let p of images; index as i;\\\">\\n                            \\n                              <img  class=\\\"card-img-top\\\" [src]=\\\"imageUrl+images[i].imageId\\\" alt=\\\"Cinque Terre\\\" id=\\\"pageImage\\\">\\n                           \\n                            </div>\\n                            \\n                      </div>\\n\\n                    </div>\\n\\n          </div>\\n  </div>\\n</div>\\n\\n\\nz\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder,FormControl, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors,AsyncValidatorFn } from '@angular/forms';\nimport { RepositoryService } from \"./../../ShareData/repository.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Router,ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-views',\n  templateUrl: './views.component.html',\n  styleUrls: ['./views.component.css']\n})\nexport class ViewsComponent implements OnInit {\n\n \n  constructor(private repository:RepositoryService,private fb: FormBuilder, private route: ActivatedRoute,private router: Router) { }\n  public  imageUrl : string = this.repository.imageUrl;\n  public Id:any;\n  public page:any;\n  public images:any;\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params:ParamMap)=>{\n      let id = params.get('id');\n      this.Id=id;\n      this.getimages(id);\n      this.getpage(id);\n    })\n   \n \n  }\n\n\n  public  getpage(id){\n    this.repository.getData('getpage/'+id)\n    .subscribe(res => {\n      this.page = res ;\n      console.log(res);\n  },\n    (error) => {\n    \n    })\n  }\n\n  public  getimages(id){\n    this.repository.getData('getimage/'+id)\n    .subscribe(res => {\n      this.images = res ;\n      console.log(res);\n  },\n    (error) => {\n    \n    })\n  }\n\n}\n"],"sourceRoot":""}